rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false; 
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId);
    }
    
    match /posts/{postId} {
      allow list, get: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      
      // Allow a user to update a post if they are the author,
      // OR if they are only changing the 'upvotes' field.
      allow update: if isSignedIn() && 
                      (resource.data.authorId == request.auth.uid ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes']) &&
                        request.resource.data.upvotes == resource.data.upvotes + 1));
      
      allow delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }

    match /scans/{scanId} {
      allow list: if isSignedIn();
      allow get: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /soil_reports/{reportId} {
      allow list: if isSignedIn();
      allow get: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /yield_reports/{reportId} {
      allow list: if isSignedIn();
      allow get: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    match /profit_reports/{reportId} {
      allow list: if isSignedIn();
      allow get: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /roles_admin/{userId} {
        function isAdmin() {
            return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
        }

        allow get: if true;
        allow list: if false;
        allow create: if false;
        allow update: if false;
        allow delete: if request.auth != null && isAdmin();
    }
  }
}
