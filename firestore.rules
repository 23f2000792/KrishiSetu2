rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check ownership based on a 'userId' field
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if user has admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }

    // Users can read/write their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }
    
    // Admins have full access to the admin roles collection
    match /roles_admin/{userId} {
      allow read, write: if isAdmin();
    }

    // Any authenticated user can create posts and read all posts.
    // Only the author of a post can update or delete it.
    match /posts/{postId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
    
    // For user-specific collections, enforce ownership.
    // 'list' requires a query filter on userId.
    // 'get' requires the user to own the document.
    // 'create'/'update' requires the incoming data to have the correct userId.
    match /soil_reports/{reportId} {
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /scans/{scanId} {
       allow get: if request.auth != null && resource.data.userId == request.auth.uid;
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /yield_reports/{reportId} {
       allow get: if request.auth != null && resource.data.userId == request.auth.uid;
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /profit_reports/{reportId} {
       allow get: if request.auth != null && resource.data.userId == request.auth.uid;
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
