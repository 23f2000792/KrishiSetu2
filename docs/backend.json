{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user (farmer, expert, or admin) in the KrishiSetu application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role (Farmer, Expert, or Admin)."
        },
        "region": {
          "type": "string",
          "description": "The user's geographical region."
        },
        "phone": {
          "type": "string",
          "description": "The user's phone number."
        },
        "prefs": {
          "type": "object",
          "properties": {
            "push": {
              "type": "boolean"
            },
            "voice": {
              "type": "boolean"
            }
          }
        },
        "farmSize": {
          "type": "number",
          "description": "The size of the user's farm in acres."
        },
        "crops": {
          "type": "array",
          "description": "A list of crops the user is growing.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "role",
        "region",
        "phone"
      ]
    },
    "Post": {
      "title": "Post",
      "type": "object",
      "description": "Represents a community post made by a user.",
      "properties": {
        "authorId": {
          "type": "string",
          "description": "The ID of the user who created the post."
        },
        "authorName": {
          "type": "string",
          "description": "The name of the user who created the post."
        },
        "authorAvatar": {
          "type": "string",
          "description": "URL to the author's avatar image.",
          "format": "uri"
        },
        "content": {
          "type": "string",
          "description": "The text content of the post."
        },
        "image": {
          "type": "string",
          "description": "URL to an image attached to the post.",
          "format": "uri"
        },
        "language": {
          "type": "string",
          "description": "The language of the post."
        },
        "upvotes": {
          "type": "number",
          "description": "The number of upvotes the post has received."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the post was created."
        }
      },
      "required": [
        "authorId",
        "authorName",
        "content",
        "language",
        "upvotes",
        "createdAt"
      ]
    },
    "SoilReport": {
      "title": "Soil Report",
      "type": "object",
      "description": "Represents an analyzed soil test report.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who uploaded the report."
        },
        "uploadedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the report was uploaded."
        },
        "fileUrl": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the uploaded soil card file in storage."
        },
        "extractedData": {
          "type": "object",
          "properties": {
            "pH": {
              "type": "number"
            },
            "N": {
              "type": "string"
            },
            "P": {
              "type": "string"
            },
            "K": {
              "type": "string"
            },
            "OC": {
              "type": "number"
            },
            "EC": {
              "type": "number"
            }
          }
        },
        "aiSummary": {
          "type": "object",
          "properties": {
            "fertilityIndex": {
              "type": "number"
            },
            "soilType": {
              "type": "string"
            },
            "recommendedCrops": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "fertilizerPlan": {
              "type": "string"
            },
            "warnings": {
              "type": "array",
              "items": {
                "string"
              }
            },
            "organicAdvice": {
              "type": "string"
            },
            "explanation": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "userId",
        "uploadedAt",
        "aiSummary"
      ]
    },
    "Scan": {
      "title": "Scan",
      "type": "object",
      "description": "Represents a crop scan analysis result.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who performed the scan."
        },
        "imageUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL of the scanned image."
        },
        "prediction": {
          "type": "string",
          "description": "The AI's prediction for the crop's condition."
        },
        "confidence": {
          "type": "number",
          "description": "The confidence score of the prediction."
        },
        "recommendedSteps": {
          "type": "string",
          "description": "The recommended steps to take."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the scan was created."
        }
      },
      "required": [
        "userId",
        "imageUrl",
        "prediction",
        "confidence",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Uses path-based ownership for private data. Includes user id parameter for authentication.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, used for path-based ownership."
            }
          ]
        }
      },
      {
        "path": "/posts/{postId}",
        "definition": {
          "entityName": "Post",
          "schema": {
            "$ref": "#/backend/entities/Post"
          },
          "description": "Stores community posts. Publicly readable but writeable only by the author.",
          "params": [
            {
              "name": "postId",
              "description": "The unique identifier for the post."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "role_admin",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Collection to store admin roles. Existence of a document with the user's ID grants admin privileges.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, used to check admin role existence."
            }
          ]
        }
      },
      {
        "path": "/soil_reports/{reportId}",
        "definition": {
          "entityName": "SoilReport",
          "schema": {
            "$ref": "#/backend/entities/SoilReport"
          },
          "description": "Stores user-uploaded soil card analysis results.",
          "params": [
            {
              "name": "reportId",
              "description": "The unique identifier for the soil report."
            }
          ]
        }
      },
      {
        "path": "/scans/{scanId}",
        "definition": {
          "entityName": "Scan",
          "schema": {
            "$ref": "#/backend/entities/Scan"
          },
          "description": "Stores user-uploaded crop scan analysis results.",
          "params": [
            {
              "name": "scanId",
              "description": "The unique identifier for the scan."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to prioritize authorization independence, clarity, and security, adhering to the principles of DBAC (Database Authenticated Control), QAPs (Queries are not Filters), and explicit state modeling. User data is stored in a dedicated collection for authentication purposes, while roles are managed using existence checks in separate role collections to avoid complex authorization rules based on data content. The structure leverages path-based ownership for user-owned data and the Membership Map pattern for collaborative data, ensuring secure 'list' operations and atomic operations (transactions/batches) without relying on hierarchical authorization dependencies. Each document explicitly defines its security context, eliminating the need for `get()` calls in security rules."
  }
}
